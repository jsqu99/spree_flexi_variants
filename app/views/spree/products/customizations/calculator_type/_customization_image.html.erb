<% # render the (possibly shared) calculator %>

<% cust_dom_id = "customization_image_#{product_customization_type.customizable_product_options.first.id}" %>

<%= render :partial => "spree/products/customizations/calculator/#{calculator_name(product_customization_type)}",
           :locals => {:calculator=>product_customization_type.calculator} %>

  <% # add the 'change' listener for this particular file input, which will make use of the calculator above %>

  <%= content_for :head do %>
    <%= javascript_tag do %>
      $(document).on('change', '#<%= cust_dom_id %>', function(e) {

        // update the hidden price field for this file input
        $(this).siblings(".customization_price").val(calculate_customization_image_price(this));

        updatePrice();

      }); // change()
    <% end %>
  <% end %>

<%= field_set_tag product_customization_type.presentation do %>
  <% option = product_customization_type.customizable_product_options.first %>
  <ol>
    <li>
  	  <label><%= option.description %></label>

      <% # create a slightly shorter dom_id field below.  I wish I could make use of dom_id for all strings that had [ && ] %>

<!--  TODO:

Probably want to account for file type validation e.g.  I don't believe I can do this inline.

from: http://stackoverflow.com/questions/651700/how-to-have-jquery-restrict-file-types-on-upload

http://docs.jquery.com/Plugins/Validation/Methods/accept#extension

$("#myform").validate({
  rules: {
    field: {
      required: true,
      accept: "png|jpg|jpeg|gif"    // etc.
    }
  }
});
-->


      <%= file_field_tag "#{param_prefix}[#{product_customization_type.customizable_product_options.first.id}][customization_image]", :class=>"customization", :id => cust_dom_id%>
      <% # the price is stored here on change, and later collected by the product-wide updatePrice() %>
      <%= hidden_field_tag "customization_price", "0", :class => "customization_price" %>
      <%= link_to t("reset"),"" %>
    </li>
  </ol>
<% end # field_set_tag %>
