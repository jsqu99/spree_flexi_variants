<%
  if SpreeFlexiVariants::Config[:use_javascript_pricing_updates]
%>

<%= content_for :head do %>
  <%# didn't use javascript_tag here so we don't confuse deface %>
  <script type="text/javascript">
    //<![CDATA[
    // First I need to set up a mapping for the variants on the screen so I can easily grab their prices

    var variant_price_map={};

    <% if @product.has_variants? %>
      <% @product.variants.active.each_with_index do |v,index| %>
        variant_price_map[<%= v.id %>]= <%= v.price %>;
      <% end %>
    <% end %>


    // we start off the page w/ a known base price, a known set of
    // possible configurations (ad_hoc_option_values), and no customizations

    // 'updatePrice()' takes the base price + current 'configuration' adjustments + 'customization' adjustments

    var base_price=<%= @product.price %>;

    // keep track of ad_hoc adjustments
    var price_modifier_map={};

    <%  @product.ad_hoc_option_types.each do |pot| %>
      <% pot.option_values.each do |pov| %>
        price_modifier_map[<%= pov.id %>]= <%= pov.price_modifier %>;
      <% end %>
    <% end %>


    var delay = (function(){
      var timer = 0;
      return function(callback, ms){
        clearTimeout (timer);
        timer = setTimeout(callback, ms);
      };
    })();

    $(function() {

      // watch for variant changes
      $("#product-variants input[type='radio']").change(function() {
        updatePrice();
      });

      // 'watch' our configurations
      $('.ad-hoc-option-select').change(function() {

        // get _every_ option drop down and recalculate product price
        // do this immediately, since we are not waiting on the results of the exlusions post
        updatePrice();
      });

      updatePrice(); // set the initial price
    } // ready
  ); // ready

  // stolen from http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric
  function isNumeric(input) {
    return (input - 0) == input && input.length > 0;
  }

  function compute_variant_price_diff(base_price) {
    var variant_price=0;

    $("#product-variants input[type='radio']:checked").each (function() {
      variant_price=variant_price_map[$(this).val()];
    });

    <% if @product.has_variants? %>
      return variant_price-base_price;
    <% else %>
      return variant_price;  // don't return a negative number if we don't have any variants
    <% end %>

  }

  function compute_configuration_price() {
    var configuration_price=0;

    // for selects or checkboxes
    $("select.ad-hoc-option-select, input:checked.ad-hoc-option-select").each(function() {
      // the :prompt=>'None' in the select tag yields an empty string, which I can't use in the price calcuation
      var val=$(this).val();

      // now in case we are a multiple select, de-array
      if ($.isArray(val)) {
        $.each(val, function(index, value) {
          if (isNumeric(value)) {
            configuration_price+=price_modifier_map[value];
          }
        });
      } else {
        if (isNumeric(val)) {
          configuration_price+=price_modifier_map[val];
        }
      }
    });

    return configuration_price;
  }

  function compute_customization_price() {
    var price=0;

    // for selects or checkboxes
    $(".customization_price").each(function() {
      var val=$(this).val();

      if (isNumeric(val)) {
        price  +=  parseFloat(val);
      }
    });

    return price;
  }


  function updatePrice() {

    var cur_variant_price_diff       = compute_variant_price_diff(base_price);
    var cur_configuration_price =  compute_configuration_price();
    var cur_customization_price =  compute_customization_price();
    var cur_price =base_price + cur_variant_price_diff + cur_configuration_price + cur_customization_price;

    $('.price.selling').text(cur_price.toFixed(2)).formatCurrency({region: "<%= I18n.locale.to_s %>"});
  }

  //]]>
  </script>
<% end %>
<%# end if SpreeFlexiVariants::Config[:use_javascript_pricing_updates] %>
<% end %>
